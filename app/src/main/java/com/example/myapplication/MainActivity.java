package com.example.myapplication;

import androidx.appcompat.app.AppCompatActivity;

import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.system.ErrnoException;
import android.system.Os;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import org.hyperledger.indy.sdk.IndyException;
import org.hyperledger.indy.sdk.LibIndy;
import org.hyperledger.indy.sdk.anoncreds.AnoncredsResults;
import org.hyperledger.indy.sdk.did.Did;
import org.hyperledger.indy.sdk.did.DidResults;
import org.hyperledger.indy.sdk.wallet.Wallet;
import org.hyperledger.indy.sdk.anoncreds.Anoncreds;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.File;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;

public class MainActivity extends AppCompatActivity {

    String walletName = "myWallet";
    String poolName = "poolap050492";
    String stewardSeed = "000000000000000000000000Steward1";
    String poolConfig = "{'reqSignature':{},'txn':{'data':{'data':{'alias':'Node1','blskey':'4N8aUNHSgjQVgkpm8nhNEfDf6txHznoYREg9kirmJrkivgL4oSEimFF6nsQ6M41QvhM2Z33nves5vfSn9n1UwNFJBYtWVnHYMATn76vLuL3zU88KyeAYcHfsih3He6UHcXDxcaecHVz6jhCYz1P2UZn2bDVruL5wXpehgBfBaLKm3Ba','blskey_pop':'RahHYiCvoNCtPTrVtP7nMC5eTYrsUA8WjXbdhNc8debh1agE9bGiJxWBXYNFbnJXoXhWFMvyqhqhRoq737YQemH5ik9oL7R4NTTCz2LEZhkgLJzB3QRQqJyBNyv7acbdHrAT8nQ9UkLbaVL9NBpnWXBTw4LEMePaSHEw66RzPNdAX1','client_ip':'${poolIp}','client_port':9702,'node_ip':'${poolIp}','node_port':9701,'services':['VALIDATOR']},'dest':'Gw6pDLhcBcoQesN72qfotTgFa7cbuqZpkX3Xo6pLhPhv'},'metadata':{'from':'Th7MpTaRZVRYnPiabds81Y'},'type':'0'},'txnMetadata':{'seqNo':1,'txnId':'fea82e10e894419fe2bea7d96296a6d46f50f93f9eeda954ec461b2ed2950b62'},'ver':'1'}" +
            "        {'reqSignature':{},'txn':{'data':{'data':{'alias':'Node2','blskey':'37rAPpXVoxzKhz7d9gkUe52XuXryuLXoM6P6LbWDB7LSbG62Lsb33sfG7zqS8TK1MXwuCHj1FKNzVpsnafmqLG1vXN88rt38mNFs9TENzm4QHdBzsvCuoBnPH7rpYYDo9DZNJePaDvRvqJKByCabubJz3XXKbEeshzpz4Ma5QYpJqjk','blskey_pop':'Qr658mWZ2YC8JXGXwMDQTzuZCWF7NK9EwxphGmcBvCh6ybUuLxbG65nsX4JvD4SPNtkJ2w9ug1yLTj6fgmuDg41TgECXjLCij3RMsV8CwewBVgVN67wsA45DFWvqvLtu4rjNnE9JbdFTc1Z4WCPA3Xan44K1HoHAq9EVeaRYs8zoF5','client_ip':'${poolIp}','client_port':9704,'node_ip':'${poolIp}','node_port':9703,'services':['VALIDATOR']},'dest':'8ECVSk179mjsjKRLWiQtssMLgp6EPhWXtaYyStWPSGAb'},'metadata':{'from':'EbP4aYNeTHL6q385GuVpRV'},'type':'0'},'txnMetadata':{'seqNo':2,'txnId':'1ac8aece2a18ced660fef8694b61aac3af08ba875ce3026a160acbc3a3af35fc'},'ver':'1'}" +
            "        {'reqSignature':{},'txn':{'data':{'data':{'alias':'Node3','blskey':'3WFpdbg7C5cnLYZwFZevJqhubkFALBfCBBok15GdrKMUhUjGsk3jV6QKj6MZgEubF7oqCafxNdkm7eswgA4sdKTRc82tLGzZBd6vNqU8dupzup6uYUf32KTHTPQbuUM8Yk4QFXjEf2Usu2TJcNkdgpyeUSX42u5LqdDDpNSWUK5deC5','blskey_pop':'QwDeb2CkNSx6r8QC8vGQK3GRv7Yndn84TGNijX8YXHPiagXajyfTjoR87rXUu4G4QLk2cF8NNyqWiYMus1623dELWwx57rLCFqGh7N4ZRbGDRP4fnVcaKg1BcUxQ866Ven4gw8y4N56S5HzxXNBZtLYmhGHvDtk6PFkFwCvxYrNYjh','client_ip':'${poolIp}','client_port':9706,'node_ip':'${poolIp}','node_port':9705,'services':['VALIDATOR']},'dest':'DKVxG2fXXTU8yT5N7hGEbXB3dfdAnYv1JczDUHpmDxya'},'metadata':{'from':'4cU41vWW82ArfxJxHkzXPG'},'type':'0'},'txnMetadata':{'seqNo':3,'txnId':'7e9f355dffa78ed24668f0e0e369fd8c224076571c51e2ea8be5f26479edebe4'},'ver':'1'}" +
            "        {'reqSignature':{},'txn':{'data':{'data':{'alias':'Node4','blskey':'2zN3bHM1m4rLz54MJHYSwvqzPchYp8jkHswveCLAEJVcX6Mm1wHQD1SkPYMzUDTZvWvhuE6VNAkK3KxVeEmsanSmvjVkReDeBEMxeDaayjcZjFGPydyey1qxBHmTvAnBKoPydvuTAqx5f7YNNRAdeLmUi99gERUU7TD8KfAa6MpQ9bw','blskey_pop':'RPLagxaR5xdimFzwmzYnz4ZhWtYQEj8iR5ZU53T2gitPCyCHQneUn2Huc4oeLd2B2HzkGnjAff4hWTJT6C7qHYB1Mv2wU5iHHGFWkhnTX9WsEAbunJCV2qcaXScKj4tTfvdDKfLiVuU2av6hbsMztirRze7LvYBkRHV3tGwyCptsrP','client_ip':'${poolIp}','client_port':9708,'node_ip':'${poolIp}','node_port':9707,'services':['VALIDATOR']},'dest':'4PS3EDQ3dW1tci1Bp6543CfuuebjFrg36kLAUcskGfaA'},'metadata':{'from':'TWwCRQRZ2ZHMJFn9TzLp7W'},'type':'0'},'txnMetadata':{'seqNo':4,'txnId':'aa5e817d7cc626170eca175822029339a444eb0ee8f0bd20d3b0b76e566fb008'},'ver':'1'}";

    String credDefJson = "{'ver':'1.0','id':'Kes23xMK5zibyt86FL9Ynm:3:CL:Kes23xMK5zibyt86FL9Ynm:2:smit:5.7:shrini:1','schemaId':'Kes23xMK5zibyt86FL9Ynm:2:smit:5.7','type':'CL','tag':'shrini:1','value':{'primary':{'n':'93110273231999466247004495126098906050403188244010732248780274803377673275800320880036463304263020525354585702119356435994790351344386150592413861862974173877957174710160409227478512311247295236818278471699018254397542499061055584918795367581919789946922976320658746455140226959114288421926071214701194079761479895259738284563396122762167554622452788838003942355090174259887827579307242005827730780951127503226665898372860284629224640848147615938383599848510058994987042128858249408310202652418142060875323218336927337731427015616357196127682205186951602465202319816597000916052219473480729014050416207218602697330149','s':'46344936019659737074816289577068179909553508083056129486040905974055583041433889766188405489745824276408282331745270046105707351705985614706911098263655523422228545975724013026571587663174476932750395341847468212893669919541621818230313885757029067938390809399284180362913817820609342099167969993517973596038296806105979571052428224320106471813641091460274297476786160520006399520247401188958813374366224525922167896724079368410364986217160371004122113511757652802313489718566461584482031799181407135389562778153770350127429229792749656025684303324173834649478560757359906673819652079015730402929299093327176347318229','r':{'middlename':'48252420303106581472966694917305347189579635229877562364820322508569732015830120967900463134564569922519571994796812476678430590596480627812611112681710213707477077685900939278717293960215556703691022577764877921943637107263029993212881062588534948610034706825748206519528603136067107186182593235681002240786632903374335833937415923022910833235283910500632145392332644587485372452826860090253376110677434197677066789536992761257101980614469874918401305482553609102886055530424841815607473769254769419042735653429212975514034265249877293664745384615420635326326171817736779359519851913649740092413718212425254075788220','address':'22197857571296925230846731112492348660415434276204906546006867763737403148951205077993144510816719661342102778128628104660165550480904389429272172183260319583873672666844564474587325121093829728495673995689095807642464615974992381390518626459983605410265414258573980154276172422394195344685427532558198686839103611173716640942169345737463817222177052679191724228933702662213013143559144230966484221129088036879657155562046370994957059138460967299755360800509612062966080110083942808957859910475638643658170969747291419056625323449758105085766631071036833295250508343911127549446852534566391533057774943547093598196214','master_secret':'3394323365314329610997687358706035361031109756558191986116706731282864054594873832692714114591794586389034255683615854261832858805590786938429302702032579499110484226282834033202120241708383016707404580874024062314355994988251766977809765382770179281070142611173461715633452057680827813204487283580886233202461607704979907643010254427590093179016621093243021981315123712112602062234031610351252361718943007319169959947074224648565832818086293395905467814935356357461191288472463213542441039057328460860388463754691821668955501575927826071245555063994694430618182696616679075189772223517164331349267825021003684758662','firstname':'29578953510878913294080114785931097573315793648310785461066309282088850316857925927880379815631846230606368912772230916722463490590941401720353204882682167110380628848179627968144192667543125403584000749525352868274556453680990174103446273708694581704759996073340455654256116970941521161057052540447448494092060922067385416541928160898410348389636358963509749735463092114027718232651053233067325391796611313059275163365399696928432603004254720654797597019406028978591253755924979371810244918532691535307787742836354158533269103795156636114926989703585006786724060235406386602422769217980544707866587004218606396571531','lastname':'68066719129335763607951975254553210527857345808320375572546584958152789429550757877933028670217513771150799994763212800139993046636378298981697530007170957255632606426214105578138973041547904527971219255079120838330679766473478936918496049845392966575670194744150322492610089784955060672731781067788847103253359870649378074411905483595477779161744636582514743998842929174106305282942990629433554543000301476097784098912621237013053729748225334618039150824541400763268394473731078881301105015662815439711458649853589743658874280319299009380211395540530008802113663079783142826849358020135960875808075418524158028508622'},'rctxt':'32970234819888318340431080922617847170606469578117523224050008178889249862069869057535938371141135090691507271278971807718183464103748360737574677680577372971848699223031688591322863234662895176170293143985361421463982551250314271286235904188859900775034222075763520102300552979429457518586597442652690775907042584295391040018034679610052282373262389602398441904685623427559142416079397218080584700699560357903618987762371903879409906781303178932295216906276195635386753957760346273209598519514089053570803870121515954020193762920728114997831329110647658543067149885345051421406853058926184326120278633580060061515783','z':'30723391419223856678655027583504595526728453319149977516674351289031036667559179989322359339686346100864285403786191147872824926373133541254395489104415472468865899631940422303970384826487419357223061548420074745643760197051898135169265667715285879309974230045129415614152028629365940024970185095434130950749886072210042754243730888080746211792863284574322186550652184316241815916138274783621649517594818994790552971054004299108173855885580359513680095680163361609309805810786035380351237472867440504711610240683813270608063667639949211965582267851980808503184696660405074351943435617292732079787051435154468876940675'},'revocation':{'g':'1 067877B77E8E2DB8D3634789DC044F5DCBD32DEA125706F71B24BBAAFC62772A 1 1286AA780E5491D72A92B13F76F8ADF829E1F27F9A3FB82EB0E51ED94C476606 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8','g_dash':'1 0C4C2038838B13BE6E7C1DC0E86211CC8C3F37ECA59DD86FBF890A20E9A4991A 1 137120EE459F33A69498834EC9AB0BD4EB4D81266E0F1739D22EC1E6D122A8BA 1 090E1F3AB5D974770A621D02AA769104169190BD7E9B6BD0E255C3131F63A75E 1 0E216B4A6366EE5E0367EEAA3B034A3C6E5FB11567AA1885CEBA2D34576EEA0F 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 1 0000000000000000000000000000000000000000000000000000000000000000','h':'1 0358C28ACA3B3723FD8D6728221239D59940A6770B7EBCEEF6C14BDE970DD8A7 1 0B93DBA7BF0C782F7F69DA697907740D54414279F8FE5B41DC1ABC21162D27E2 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8','h0':'1 1F0D05870D4D0171B2F07E749C0733719012A0B576C02638456754681FCE9978 1 1DCEA614A99775CBC72A13AC6F53B0A517846488D5B08339397DAD35405A44A4 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8','h1':'1 08BDD04001710C6E0C0D1668C416BE0DCB702B449011D89123E2E96ECD74F8D8 1 1C188DCD24AE9146574D4705D9AA733AA4C2EA3BA6EA1A7992F256A21ACCCED5 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8','h2':'1 0CCAFE7CD1D44AFDC33AF314C7062D0170219086813F9EC36E30F4466ED7507E 1 1D9F01E5CADB7EC7FAD7F1F6F84669EC17A1D0E92BF79DA833593ED226605553 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8','htilde':'1 22F251262CB84EF0B21F63C57309BB04506FEABFF7059D3AE1002A3899C0C8DE 1 075E99FDA40E5D90EE25EF585D9780C2B804D4570987B5A5D9567E397A4CCBB6 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8','h_cap':'1 10BB073D92DC4F3B9BB6DC703CEE8336F417817CF918AFEC5AC86165E6CD6826 1 104386D62F24305906E996157026AE654F73A17E9A024CD2023E07D7C1921CC6 1 1EEA184253FC216ABB5D6D93EB016BE9C01A82BA322214576B6CF7704DF30714 1 0585F1E90C2CCF52E8E912E1AE74906D0F9768ADF8221DC7747FC5A2A31D79F6 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 1 0000000000000000000000000000000000000000000000000000000000000000','u':'1 23A32E8EBA441A3E5F2DB73BBB1F2FE256E7B58BA6029DE8B734309262F1D0E5 1 06AD6BA9B04FDE0C295308194AC5182B6F0D89EAC1A4CEB1FB36097FD4AFE85C 1 12246059657BFFF0C62299298AE81B7352B53D12CBA0547036506260C93A0187 1 013C3C66CB58C8D0F67F0EEB4CE264D0F1E9FBF00F14FC04AAE3FD309B577459 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 1 0000000000000000000000000000000000000000000000000000000000000000','pk':'1 0E806F4E1910F556A7D13A1ACCD7D881B29BEFED7E06A4F3936117A2827D91C7 1 0FB786E76D63EB6B34CA5068E3EB6A1AA8382EAB223208BCDD6596F21DC08650 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8','y':'1 21047B6FD7FACEC68ADA090762BF5810335B388215F969BD67AF247FDF3F7E4D 1 06543188E72038873C59D113958419291D09A698A88E4E40B6E86BA060381B7D 1 15C0FF2057ACC2B0E8FD777A27EF55BAF71A90682C74766DB7333BC954B453D0 1 13C5898071159D30D824BC34B8F6D4E38567816FC9345A1FD4BF60F140A22F4C 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 1 0000000000000000000000000000000000000000000000000000000000000000'}}}";
    String credOfferJson = "{'schema_id':'Kes23xMK5zibyt86FL9Ynm:2:smit:5.7','cred_def_id':'Kes23xMK5zibyt86FL9Ynm:3:CL:Kes23xMK5zibyt86FL9Ynm:2:smit:5.7:shrini:1','key_correctness_proof':{'c':'69210412319455325929354899565892784574179907490941423614529517680593357763669','xz_cap':'1368765464324000115144261382027129342491427333288861600168948152191477715706743518957461793595013136276810887051806605778357402254837925926009079332584651042132450930173235233251615466234147472781375746124260041039291510695705388622819335910870523791039650730775693558763872652748007379782443458012159110328287572176005543579062859790926490387043261495045598987853424305162568952243131779155273623368718282108412238319142672468308485548157389373423944064287356837889471042791521886197296622740113240932364929341765552395095889903560322414922638961571131027792734777916258932047094924992765452878918892690747954665715830593682134954879331722733004326414468016412863369985463748913918814036494498','xr_cap':[['lastname','574292403245388695364560965352591818680232971958274702561402413533387621613696315055862028073846874290742566706320817107341458990462919284068916450007369093758563514387401980602629968779479065021255702722586195184057458424403496405063494430079508496968351337979930715253276694206671527263989540352560240218034072311345485152014363371594623526280072763344053354275809163801856325990492935527301340389323080790435939693289456887656316915047700793878256888203832148469298153556497845314035572037346494590028256002518852345175241081030475008222080504170438030069823455998495380046078983243573285481279862496899981854743124490059662112643687615924278333256774345854249968663895448566506590812629517'],['master_secret','173131955832228423270412542657597973840367606095170174972143683986164045683989772531514944330852039610754879562141776025996053850664121516516363008193392270384737531108610016884627604103757173968635099779571333113646974295513962962752845181360495340304764381028256235065374346571856013565791035725794849261409034159397996186884507529421341459021936524481026705947792819277596668834516033148349933382173076643622525042697953581480287962941015214920080846270867284224321350142378967048253197065888689716547223376127612545552014817049522264381794043069676075791911836948223679823654120243094601082304590272366985120555707560808141874284636328756257169593802772580130063543447049405135206462938722'],['firstname','1136963326428042138035513691094926268101494833675261192529585314637109845242961670290901072205437404989926407950942034511893578550201355379619659722182067264114170596544088617476836454377917006132356969905374615411382555878695457596123120322668872527944926540712782624680521502345303242485839589302483559996251096389600541130255582269103441298552555090585087171416037573201722478238898664574124800552231599508966072641810859787126846658438735163227578639451480315897275162765948481241644023184252978758735471060932617098660929890021151175144779955925669813011094844762093332164351793064441533772784478211389828383204459351484897276747246282396955139828152191710458943462970284668341559484502580'],['address','1130705927990585199723909506610663192948536367791368711494252465248064828878652034549205004127170106743848810784352105501540666658230556251718958380066127314413000840712145569946987288252539048617170284984948120872401081592184541914273797331955298223043014949666134522860981035134569891430569783958337742326416320563019082871430158202168010437641075551636342869956369602893012713053980744408170936273748331098793958637821050210482087747219012059677347066455244197188571919025527699729800604198548376276680773142938621910288219249223924411830263833614215158433506386740033685799837436565371103488682292244793779666195686458002687513844235079994888842669244067795729909601009328208791524240089545'],['middlename','1234207708533496483951682961717692129567422226834052552329476601698872672673701575007547501003200770691289981550556267950619503599875729929242278678267501879654524037387132776945005818552314269974523994206310026792187463131736493506836986581638146197344086641727912788947769127044788353658805659902554055577525796842456462665808563203697900833420884374048193310869898579283342307213734440388556411669613705155906180071009522713343599180286542905898410457046000615585385613146931975614943837813423203974686843330300715292026717666994070368646381791155885361407017777114156169579742716178339631577946256703672716079947734960702193449930586767551173914929690951156532646663132169214253895144110249']]},'nonce':'829840624725048567572637'}";
//    String credDefJson = "\"{\\\"ver\\\":\\\"1.0\\\",\\\"id\\\":\\\"Kes23xMK5zibyt86FL9Ynm:3:CL:Kes23xMK5zibyt86FL9Ynm:2:smit:5.7:shrini:1\\\",\\\"schemaId\\\":\\\"Kes23xMK5zibyt86FL9Ynm:2:smit:5.7\\\",\\\"type\\\":\\\"CL\\\",\\\"tag\\\":\\\"shrini:1\\\",\\\"value\\\":{\\\"primary\\\":{\\\"n\\\":\\\"93110273231999466247004495126098906050403188244010732248780274803377673275800320880036463304263020525354585702119356435994790351344386150592413861862974173877957174710160409227478512311247295236818278471699018254397542499061055584918795367581919789946922976320658746455140226959114288421926071214701194079761479895259738284563396122762167554622452788838003942355090174259887827579307242005827730780951127503226665898372860284629224640848147615938383599848510058994987042128858249408310202652418142060875323218336927337731427015616357196127682205186951602465202319816597000916052219473480729014050416207218602697330149\\\",\\\"s\\\":\\\"46344936019659737074816289577068179909553508083056129486040905974055583041433889766188405489745824276408282331745270046105707351705985614706911098263655523422228545975724013026571587663174476932750395341847468212893669919541621818230313885757029067938390809399284180362913817820609342099167969993517973596038296806105979571052428224320106471813641091460274297476786160520006399520247401188958813374366224525922167896724079368410364986217160371004122113511757652802313489718566461584482031799181407135389562778153770350127429229792749656025684303324173834649478560757359906673819652079015730402929299093327176347318229\\\",\\\"r\\\":{\\\"middlename\\\":\\\"48252420303106581472966694917305347189579635229877562364820322508569732015830120967900463134564569922519571994796812476678430590596480627812611112681710213707477077685900939278717293960215556703691022577764877921943637107263029993212881062588534948610034706825748206519528603136067107186182593235681002240786632903374335833937415923022910833235283910500632145392332644587485372452826860090253376110677434197677066789536992761257101980614469874918401305482553609102886055530424841815607473769254769419042735653429212975514034265249877293664745384615420635326326171817736779359519851913649740092413718212425254075788220\\\",\\\"address\\\":\\\"22197857571296925230846731112492348660415434276204906546006867763737403148951205077993144510816719661342102778128628104660165550480904389429272172183260319583873672666844564474587325121093829728495673995689095807642464615974992381390518626459983605410265414258573980154276172422394195344685427532558198686839103611173716640942169345737463817222177052679191724228933702662213013143559144230966484221129088036879657155562046370994957059138460967299755360800509612062966080110083942808957859910475638643658170969747291419056625323449758105085766631071036833295250508343911127549446852534566391533057774943547093598196214\\\",\\\"master_secret\\\":\\\"3394323365314329610997687358706035361031109756558191986116706731282864054594873832692714114591794586389034255683615854261832858805590786938429302702032579499110484226282834033202120241708383016707404580874024062314355994988251766977809765382770179281070142611173461715633452057680827813204487283580886233202461607704979907643010254427590093179016621093243021981315123712112602062234031610351252361718943007319169959947074224648565832818086293395905467814935356357461191288472463213542441039057328460860388463754691821668955501575927826071245555063994694430618182696616679075189772223517164331349267825021003684758662\\\",\\\"firstname\\\":\\\"29578953510878913294080114785931097573315793648310785461066309282088850316857925927880379815631846230606368912772230916722463490590941401720353204882682167110380628848179627968144192667543125403584000749525352868274556453680990174103446273708694581704759996073340455654256116970941521161057052540447448494092060922067385416541928160898410348389636358963509749735463092114027718232651053233067325391796611313059275163365399696928432603004254720654797597019406028978591253755924979371810244918532691535307787742836354158533269103795156636114926989703585006786724060235406386602422769217980544707866587004218606396571531\\\",\\\"lastname\\\":\\\"68066719129335763607951975254553210527857345808320375572546584958152789429550757877933028670217513771150799994763212800139993046636378298981697530007170957255632606426214105578138973041547904527971219255079120838330679766473478936918496049845392966575670194744150322492610089784955060672731781067788847103253359870649378074411905483595477779161744636582514743998842929174106305282942990629433554543000301476097784098912621237013053729748225334618039150824541400763268394473731078881301105015662815439711458649853589743658874280319299009380211395540530008802113663079783142826849358020135960875808075418524158028508622\\\"},\\\"rctxt\\\":\\\"32970234819888318340431080922617847170606469578117523224050008178889249862069869057535938371141135090691507271278971807718183464103748360737574677680577372971848699223031688591322863234662895176170293143985361421463982551250314271286235904188859900775034222075763520102300552979429457518586597442652690775907042584295391040018034679610052282373262389602398441904685623427559142416079397218080584700699560357903618987762371903879409906781303178932295216906276195635386753957760346273209598519514089053570803870121515954020193762920728114997831329110647658543067149885345051421406853058926184326120278633580060061515783\\\",\\\"z\\\":\\\"30723391419223856678655027583504595526728453319149977516674351289031036667559179989322359339686346100864285403786191147872824926373133541254395489104415472468865899631940422303970384826487419357223061548420074745643760197051898135169265667715285879309974230045129415614152028629365940024970185095434130950749886072210042754243730888080746211792863284574322186550652184316241815916138274783621649517594818994790552971054004299108173855885580359513680095680163361609309805810786035380351237472867440504711610240683813270608063667639949211965582267851980808503184696660405074351943435617292732079787051435154468876940675\\\"},\\\"revocation\\\":{\\\"g\\\":\\\"1 067877B77E8E2DB8D3634789DC044F5DCBD32DEA125706F71B24BBAAFC62772A 1 1286AA780E5491D72A92B13F76F8ADF829E1F27F9A3FB82EB0E51ED94C476606 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8\\\",\\\"g_dash\\\":\\\"1 0C4C2038838B13BE6E7C1DC0E86211CC8C3F37ECA59DD86FBF890A20E9A4991A 1 137120EE459F33A69498834EC9AB0BD4EB4D81266E0F1739D22EC1E6D122A8BA 1 090E1F3AB5D974770A621D02AA769104169190BD7E9B6BD0E255C3131F63A75E 1 0E216B4A6366EE5E0367EEAA3B034A3C6E5FB11567AA1885CEBA2D34576EEA0F 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 1 0000000000000000000000000000000000000000000000000000000000000000\\\",\\\"h\\\":\\\"1 0358C28ACA3B3723FD8D6728221239D59940A6770B7EBCEEF6C14BDE970DD8A7 1 0B93DBA7BF0C782F7F69DA697907740D54414279F8FE5B41DC1ABC21162D27E2 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8\\\",\\\"h0\\\":\\\"1 1F0D05870D4D0171B2F07E749C0733719012A0B576C02638456754681FCE9978 1 1DCEA614A99775CBC72A13AC6F53B0A517846488D5B08339397DAD35405A44A4 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8\\\",\\\"h1\\\":\\\"1 08BDD04001710C6E0C0D1668C416BE0DCB702B449011D89123E2E96ECD74F8D8 1 1C188DCD24AE9146574D4705D9AA733AA4C2EA3BA6EA1A7992F256A21ACCCED5 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8\\\",\\\"h2\\\":\\\"1 0CCAFE7CD1D44AFDC33AF314C7062D0170219086813F9EC36E30F4466ED7507E 1 1D9F01E5CADB7EC7FAD7F1F6F84669EC17A1D0E92BF79DA833593ED226605553 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8\\\",\\\"htilde\\\":\\\"1 22F251262CB84EF0B21F63C57309BB04506FEABFF7059D3AE1002A3899C0C8DE 1 075E99FDA40E5D90EE25EF585D9780C2B804D4570987B5A5D9567E397A4CCBB6 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8\\\",\\\"h_cap\\\":\\\"1 10BB073D92DC4F3B9BB6DC703CEE8336F417817CF918AFEC5AC86165E6CD6826 1 104386D62F24305906E996157026AE654F73A17E9A024CD2023E07D7C1921CC6 1 1EEA184253FC216ABB5D6D93EB016BE9C01A82BA322214576B6CF7704DF30714 1 0585F1E90C2CCF52E8E912E1AE74906D0F9768ADF8221DC7747FC5A2A31D79F6 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 1 0000000000000000000000000000000000000000000000000000000000000000\\\",\\\"u\\\":\\\"1 23A32E8EBA441A3E5F2DB73BBB1F2FE256E7B58BA6029DE8B734309262F1D0E5 1 06AD6BA9B04FDE0C295308194AC5182B6F0D89EAC1A4CEB1FB36097FD4AFE85C 1 12246059657BFFF0C62299298AE81B7352B53D12CBA0547036506260C93A0187 1 013C3C66CB58C8D0F67F0EEB4CE264D0F1E9FBF00F14FC04AAE3FD309B577459 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 1 0000000000000000000000000000000000000000000000000000000000000000\\\",\\\"pk\\\":\\\"1 0E806F4E1910F556A7D13A1ACCD7D881B29BEFED7E06A4F3936117A2827D91C7 1 0FB786E76D63EB6B34CA5068E3EB6A1AA8382EAB223208BCDD6596F21DC08650 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8\\\",\\\"y\\\":\\\"1 21047B6FD7FACEC68ADA090762BF5810335B388215F969BD67AF247FDF3F7E4D 1 06543188E72038873C59D113958419291D09A698A88E4E40B6E86BA060381B7D 1 15C0FF2057ACC2B0E8FD777A27EF55BAF71A90682C74766DB7333BC954B453D0 1 13C5898071159D30D824BC34B8F6D4E38567816FC9345A1FD4BF60F140A22F4C 2 095E45DDF417D05FB10933FFC63D474548B7FFFF7888802F07FFFFFF7D07A8A8 1 0000000000000000000000000000000000000000000000000000000000000000\\\"}}}\"";
//    String credOfferJson = "{\"schema_id\":\"Kes23xMK5zibyt86FL9Ynm:2:smit:5.7\",\"cred_def_id\":\"Kes23xMK5zibyt86FL9Ynm:3:CL:Kes23xMK5zibyt86FL9Ynm:2:smit:5.7:shrini:1\",\"key_correctness_proof\":{\"c\":\"69210412319455325929354899565892784574179907490941423614529517680593357763669\",\"xz_cap\":\"1368765464324000115144261382027129342491427333288861600168948152191477715706743518957461793595013136276810887051806605778357402254837925926009079332584651042132450930173235233251615466234147472781375746124260041039291510695705388622819335910870523791039650730775693558763872652748007379782443458012159110328287572176005543579062859790926490387043261495045598987853424305162568952243131779155273623368718282108412238319142672468308485548157389373423944064287356837889471042791521886197296622740113240932364929341765552395095889903560322414922638961571131027792734777916258932047094924992765452878918892690747954665715830593682134954879331722733004326414468016412863369985463748913918814036494498\",\"xr_cap\":[[\"lastname\",\"574292403245388695364560965352591818680232971958274702561402413533387621613696315055862028073846874290742566706320817107341458990462919284068916450007369093758563514387401980602629968779479065021255702722586195184057458424403496405063494430079508496968351337979930715253276694206671527263989540352560240218034072311345485152014363371594623526280072763344053354275809163801856325990492935527301340389323080790435939693289456887656316915047700793878256888203832148469298153556497845314035572037346494590028256002518852345175241081030475008222080504170438030069823455998495380046078983243573285481279862496899981854743124490059662112643687615924278333256774345854249968663895448566506590812629517\"],[\"master_secret\",\"173131955832228423270412542657597973840367606095170174972143683986164045683989772531514944330852039610754879562141776025996053850664121516516363008193392270384737531108610016884627604103757173968635099779571333113646974295513962962752845181360495340304764381028256235065374346571856013565791035725794849261409034159397996186884507529421341459021936524481026705947792819277596668834516033148349933382173076643622525042697953581480287962941015214920080846270867284224321350142378967048253197065888689716547223376127612545552014817049522264381794043069676075791911836948223679823654120243094601082304590272366985120555707560808141874284636328756257169593802772580130063543447049405135206462938722\"],[\"firstname\",\"1136963326428042138035513691094926268101494833675261192529585314637109845242961670290901072205437404989926407950942034511893578550201355379619659722182067264114170596544088617476836454377917006132356969905374615411382555878695457596123120322668872527944926540712782624680521502345303242485839589302483559996251096389600541130255582269103441298552555090585087171416037573201722478238898664574124800552231599508966072641810859787126846658438735163227578639451480315897275162765948481241644023184252978758735471060932617098660929890021151175144779955925669813011094844762093332164351793064441533772784478211389828383204459351484897276747246282396955139828152191710458943462970284668341559484502580\"],[\"address\",\"1130705927990585199723909506610663192948536367791368711494252465248064828878652034549205004127170106743848810784352105501540666658230556251718958380066127314413000840712145569946987288252539048617170284984948120872401081592184541914273797331955298223043014949666134522860981035134569891430569783958337742326416320563019082871430158202168010437641075551636342869956369602893012713053980744408170936273748331098793958637821050210482087747219012059677347066455244197188571919025527699729800604198548376276680773142938621910288219249223924411830263833614215158433506386740033685799837436565371103488682292244793779666195686458002687513844235079994888842669244067795729909601009328208791524240089545\"],[\"middlename\",\"1234207708533496483951682961717692129567422226834052552329476601698872672673701575007547501003200770691289981550556267950619503599875729929242278678267501879654524037387132776945005818552314269974523994206310026792187463131736493506836986581638146197344086641727912788947769127044788353658805659902554055577525796842456462665808563203697900833420884374048193310869898579283342307213734440388556411669613705155906180071009522713343599180286542905898410457046000615585385613146931975614943837813423203974686843330300715292026717666994070368646381791155885361407017777114156169579742716178339631577946256703672716079947734960702193449930586767551173914929690951156532646663132169214253895144110249\"]]},\"nonce\":\"829840624725048567572637\"}";
    private Button backup_wallet_button;
    private Button create_wallet_button;
    private Button import_wallet_button;
    private Button create_wallet_master_key;
    private TextView did_textview;

    private String myVerKey;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        try {
            Os.setenv("EXTERNAL_STORAGE", getExternalFilesDir(null).getAbsolutePath(), true);
            System.loadLibrary("indy");
        } catch (ErrnoException e) {
            e.printStackTrace();
        }

        backup_wallet_button = (Button)findViewById(R.id.backup_wallet_button);
        create_wallet_button = (Button)findViewById(R.id.create_wallet_button);
        import_wallet_button = (Button)findViewById(R.id.import_wallet_button);
        create_wallet_master_key = (Button)findViewById(R.id.create_wallet_master_key);
        did_textview = (TextView)findViewById(R.id.did_textview);

        backup_wallet_button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                new ExportWalletTask().execute();
            }
        });



        create_wallet_button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                createWallet();
            }
        });

        import_wallet_button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                new importWalletTask().execute();
                Log.d("Hi_sas","hii");
            }
        });

        create_wallet_master_key.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                createMasterSecret();
            }
        });
    }

    public void createWallet()
    {
        LibIndy.init();
        if(LibIndy.isInitialized()){

            try {

                // 1. Create ledger config from genesis txn file
                //String poolName = PoolUtils.createPoolLedgerConfig();

                //PoolJSONParameters.OpenPoolLedgerJSONParameter config2 = new PoolJSONParameters.OpenPoolLedgerJSONParameter(null, null);
                //Pool pool = Pool.openPoolLedger(poolName, "{}").get();

                // 2. Create and Open My Wallet
                String myWalletConfig = new JSONObject().put("id", "amit123").toString();
                String myWalletCredentials= new JSONObject().put("key", "123321").toString();
                Wallet.createWallet(myWalletConfig, myWalletCredentials).get();
                Wallet myWallet = Wallet.openWallet(myWalletConfig, myWalletCredentials).get();

                // 4. Create My Did
                DidResults.CreateAndStoreMyDidResult createMyDidResult = Did.createAndStoreMyDid(myWallet, "{}").get();
                String myDid = createMyDidResult.getDid();
                myVerKey = createMyDidResult.getVerkey();

                did_textview.setText(myDid);
                myWallet.closeWallet().get();
                Log.d("Hi_myWallet",myDid);
            } catch (ExecutionException e) {
                Log.d("Hi_ExecutionException",e.toString());
                e.printStackTrace();
            } catch (InterruptedException e) {
                e.printStackTrace();
                Log.d("HI_InterruptedException",e.toString());
            } catch (IndyException e) {
                e.printStackTrace();
                Log.d("HI_IndyException",e.toString());
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }


    private class ExportWalletTask extends AsyncTask {
        ProgressDialog progressDialog;

        @Override
        protected Object doInBackground(Object[] objects) {


            JSONObject exportConfigJson = new JSONObject();
            try {
                exportConfigJson.put("path","/storage/emulated/0/Protech/backup/protech.wallet" );
                exportConfigJson.put("key", "test");
            } catch (JSONException e) {
                // TODO Auto-generated catch block
                Log.d("Hi_eror",e.toString());
                e.printStackTrace();
            }

            Log.d("Hi_tostring", exportConfigJson.toString());
            Log.d("Hi_path", String.valueOf(exportConfigJson));

            try {
                String myWalletConfig = new JSONObject().put("id", "amit123").toString();
                String myWalletCredentials= new JSONObject().put("key", "123321").toString();
                Wallet myWallet = Wallet.openWallet(myWalletConfig, myWalletCredentials).get();

                return Wallet.exportWallet(myWallet, String.valueOf(exportConfigJson));
            } catch (JSONException e) {
                e.printStackTrace();
                Log.d("Hi_1",e.toString());
            } catch (InterruptedException e) {
                e.printStackTrace();
                Log.d("Hi_2",e.toString());
            } catch (ExecutionException e) {
                e.printStackTrace();
                Log.d("Hi_3",e.toString());
            } catch (IndyException e) {
                e.printStackTrace();
                Log.d("Hi_4",e.toString());
            }
            return null;
        }

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            progressDialog = ProgressDialog.show(MainActivity.this, "Downloading", "Downloading..Please Wait", true);
        }

        @Override
        protected void onPostExecute(Object o) {


            progressDialog.dismiss();

        }


    }

    private class importWalletTask extends AsyncTask {
        ProgressDialog progressDialog;

        @Override
        protected Object doInBackground(Object[] objects) {

            JSONObject configJson = new JSONObject();
            JSONObject credentialsJson = new JSONObject();
            JSONObject importConfigJson = new JSONObject();

            File file = new File("/storage/emulated/0/Protech/ap.txt");

            if(file.exists()){
                Log.d("Hi_","File Exists");
            }else{
                Log.d("Hi_","File Not Exists");
            }

            try {
                configJson.put("id","test" );

                credentialsJson.put("key","test" );

                importConfigJson.put("path","/storage/emulated/0/Protech/ap.txt" );
                importConfigJson.put("key","test" );

                return Wallet.importWallet(String.valueOf(configJson),String.valueOf(credentialsJson),String.valueOf(importConfigJson));

            } catch (JSONException e) {
                // TODO Auto-generated catch block
                Log.d("Hi_eror",e.toString());
                e.printStackTrace();
            } catch (IndyException e) {
                Log.d("Hi_erorindy",e.toString());
                e.printStackTrace();
            }


            return null;
        }

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            progressDialog = ProgressDialog.show(MainActivity.this, "Downloading", "Downloading..Please Wait", true);

        }

        @Override
        protected void onPostExecute(Object o) {

            try {
                String myWalletConfig = new JSONObject().put("id", "test").toString();
                String myWalletCredentials= new JSONObject().put("key", "test").toString();
                Wallet myWallet = Wallet.openWallet(myWalletConfig, myWalletCredentials).get();
                String createMyDidResult   = Did.getListMyDidsWithMeta(myWallet).get();

                Log.d("Hi_",createMyDidResult);

            } catch (ExecutionException e) {
                e.printStackTrace();
            } catch (InterruptedException e) {
                e.printStackTrace();
            } catch (IndyException e) {
                e.printStackTrace();
            } catch (JSONException e) {
                e.printStackTrace();
            }

            progressDialog.dismiss();

        }
    }

    public void createMasterSecret(){
        Log.d("Hi_asd","call");
        try {
            String myWalletConfig = new JSONObject().put("id", "protech").toString();

            String myWalletCredentials= new JSONObject().put("key", "111111").toString();
            Wallet myWallet = Wallet.openWallet(myWalletConfig, myWalletCredentials).get();
            String masterSecretId = Anoncreds.proverCreateMasterSecret(myWallet, null).get();
            Log.d("Hi_result", masterSecretId);
            Log.d("Hi_result", did_textview.getText().toString());
            Log.d("Hi_result", String.valueOf(myWallet.getWalletHandle()));
            AnoncredsResults.ProverCreateCredentialRequestResult createCredReqResult =
                    Anoncreds.proverCreateCredentialReq(myWallet, "CUTQTeT9eFLzRmKzpGmKeu", credOfferJson, credDefJson, masterSecretId).get();
            String credReqJson = createCredReqResult.getCredentialRequestJson();
            String credReqMetadataJson = createCredReqResult.getCredentialRequestMetadataJson();
            Log.d("Hi_credReqJson", credReqJson);
            Log.d("Hi_credReqMetadataJson", credReqMetadataJson);
        } catch (JSONException e) {
            Log.d("Hi_JSONException",e.toString());
            e.printStackTrace();
        } catch (InterruptedException e) {
            Log.d("Hi_InterruptedException",e.toString());
            e.printStackTrace();
        } catch (ExecutionException e) {
            Log.d("Hi_ExecutionException",e.toString());
            e.printStackTrace();
        } catch (IndyException e) {
            Log.d("Hi_IndyException",e.toString());
            e.printStackTrace();
        }
    }
}
